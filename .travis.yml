git:
  submodules: false

jobs:
  include:
  - stage: test
    name: "Unit Tests"
    language: go
    go:
    - '1.12'
    env:
    - GO111MODULE=on
    script: go test -race -coverprofile=coverage.txt -covermode=atomic -v ./...
    after_success:
    - bash <(curl -s https://codecov.io/bash)
    cache:
      directories:
      - $HOME/.cache/go-build
      - $GOPATH/pkg/mod
    if: (branch = develop) OR (branch = master)
    branches:
      only:
      - develop
      - master

  - stage: test
    name: "Integration Tests"
    language: go
    go:
    - '1.12'
    env:
    - GO111MODULE=on
    services:
    - docker
    script: go test -tags=elastic -run Integration ./services -v
    cache:
      directories:
      - $HOME/.cache/go-build
      - $GOPATH/pkg/mod
    if: (branch = develop) OR (branch = master)
    branches:
      only:
      - develop
      - master

  - stage: Build docker images
    name: "Geo rest"
    language: minimal
    services:
    - docker
    install:
    - docker pull teamd2018/geo-rest:latest
    script:
    - docker build -t $DOCKERHUB_OWNER/geo-rest:$TRAVIS_COMMIT -f Dockerfile --cache-from teamd2018/geo-rest:latest .
    - docker tag $DOCKERHUB_OWNER/geo-rest:$TRAVIS_COMMIT $DOCKERHUB_OWNER/geo-rest:latest
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_NAME" --password-stdin
    - docker push $DOCKERHUB_OWNER/geo-rest
    if: branch = master
    branches:
      only:
      - master

  - stage: deploy
    name: kubernetes
    language: bash
    deploy:
    - provider: script
      skip_cleanup: true
      script: bash deploy.sh $TRAVIS_COMMIT
      on:
        branch: master
    - provider: script
      skip_cleanup: true
      script: bash deploy.sh $TRAVIS_COMMIT
      on:
        branch: develop
    before_deploy:
    - openssl aes-256-cbc -K $encrypted_eadb168e3f17_key -iv $encrypted_eadb168e3f17_iv
      -in kubernetes.tar.enc -out ./kubernetes.tar -d
    - tar -xvf kubernetes.tar
    if: branch = master
    branches:
      only:
      - master
